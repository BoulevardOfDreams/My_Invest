Software Architect

MACD

Buy Strategy (return array of 1's and 0's)
1.) Positive gradient buy - strict    : only buy + hist
                            non-strict: buy any points
2.) Positive hist buy     - buy any points

Sell Strategy (return array of 1's and 0's)
1.) Negative hist sell    - sell any points

Result Simulator Class
1.) simulate entry exit pts          - filter exact buy-sell points



        
2.) record profit
     *first must buy          
     previous           = sell ,than next buy  1 unit
     previous           = buy  ,than next sell 1 unit
3.) record transaction for further analysis 
     buy price          =
     sell price         =
     
     gross_earn_pct     = (sell-buy)/buy x 100%
     
     buy_stamp_duty     = INT(b_price)/(1000*b_price)
     
     buy_broker_cost    = 100%(buy_pct) x 0.42%
     buy_svc_tax        = buy_broker_cost  x 6%
     clear_fee          = buy_pct x 0.03%
     buy_cost           = 100% + buy_broker_cost + buy_svc_tax + buy_stamp_duty + clear_fee

     sell_stamp_duty	= INT(s_price)/(1000*s_price)
     
     sell_pct           = buy_pct + gross_earn_pct
     sell_broker_cost   = (sell_pct) x 0.42%
     sell_svc_tax       = sell_broker_cost x 6%
     clear_fee          = sell_pct x 0.03%
     sell_profit        = (sell_pct) - sell_broker_cost - sell_svc_tax - sell_stamp_duty - clear_fee
     
     net_profit_pct     = sell_profit - buy_cost
     last_buy_pct       = buy_pct
     buy_pct            += net_profit_pct (may be lost)

4.) 
     
     
    
     
4.) 
     
     

refer to github transaction modules



Buy Strategy (return array of 1's and 0's)
1.) 